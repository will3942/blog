<!DOCTYPE html>
<html lang="en">
<head>
  <title>{{title}}</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="keywords" content="will evans, willevans, will, evans" />
  <meta name="author" content="Will Evans">
  <meta name="robots" content="index, follow">
  <meta charset="UTF-8">
  <link rel="stylesheet" type="text/css" href="/main.css">
</head>
<body>
  <div id="layout">
    <a href="#menu" id="menuLink" class="menu-link">
        <span></span>
    </a>

    <div id="menu">
      <div class="pure-menu pure-menu-open">
        <a class="pure-menu-heading" href="/">Will Evans</a>

        <ul>
          <li><a href="/">Home</a></li>
          <li><a href="http://twitter.com/will3942">Twitter</a></li>
          <li><a href="http://github.com/will3942">GitHub</a></li>
          <li><a href="/resume.pdf">Résumé</a></li>
        </ul>
      </div>
    </div>

    <div id="main">

      <div class="header">
        <a href="/{{slug}}"><h1>{{title}}</h1></a>
        <h2>{{date}}</h2>
      </div>

      <div class="content">
        {{content}}
      </div>
    </div>
  </div>
  <script>
    !function(g,s,q,r,d){r=g[r]=g[r]||function(){(r.q=r.q||[]).push(
    arguments)};d=s.createElement(q);q=s.getElementsByTagName(q)[0];
    d.src='//d1l6p2sc9645hc.cloudfront.net/tracker.js';q.parentNode.
    insertBefore(d,q)}(window,document,'script','_gs');

    _gs('GSN-976668-V');
  </script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
  <script>
	  (function (window, document) {

	    var layout   = document.getElementById('layout'),
	        menu     = document.getElementById('menu'),
	        menuLink = document.getElementById('menuLink');

	    function toggleClass(element, className) {
	        var classes = element.className.split(/\s+/),
	            length = classes.length,
	            i = 0;

	        for(; i < length; i++) {
	          if (classes[i] === className) {
	            classes.splice(i, 1);
	            break;
	          }
	        }
	        // The className is not found
	        if (length === classes.length) {
	            classes.push(className);
	        }

	        element.className = classes.join(' ');
	    }

	    menuLink.onclick = function (e) {
	        var active = 'active';

	        e.preventDefault();
	        toggleClass(layout, active);
	        toggleClass(menu, active);
	        toggleClass(menuLink, active);
	    };

		}(this, this.document));
	</script>
  <script>
    function loadGists() {
      var els = $('code[gist]'), gists = {}, code = [], stylesheets = [];
      // Get elements referencing a gist and build a gists hash referencing the elements that use it
      els.each(function(idx, rawEl) {
        var el = $(rawEl), gist = el.attr('gist');
        rawEl.gist = gist;
        rawEl.file = el.attr('file');
        gists[gist] = gists[gist] || { targets: [] };
        gists[gist].targets.push(el);
      });
      // Load the gists
      $.each(gists, function(name, data) {
        $.getJSON(name + '?callback=?', function(data) {
          var gist = gists[name];
          gist.data = data;
          // Only insert the stylesheets once
          if(stylesheets.indexOf(gist.data.stylesheet) < 0) {
            stylesheets.push(gist.data.stylesheet);
            $('head').append('<link rel="stylesheet" href="' + gist.data.stylesheet + '" />');
          }
          gist.files = $(gist.data.div).find('.gist-file');
          gist.outer = $(gist.data.div).first().html('');
          // Iterate elements refering to this gist
          $(gist.targets).each(function(idx, target) {
            var file = target.get(0).file;
            if(file) {
              var o = gist.outer.clone();
              var c = '<div class="gist-file">' + $(gist.files.get(gist.data.files.indexOf(file))).html() + '</div>';
              o.html(c);
              target.replaceWith(o);
            }
            else {
              target.replaceWith(gist.data.div);
            }
          });
        });
      });
    }
    // Load them on document ready
    $(loadGists);
  </script>
</body>
</html>
